on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: tests
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run linters
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
  test:
    strategy:
      matrix:
        go-version: [1.12.x,1.13.x,1.14.x,1.15.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    services:
      mysql:
        image: mysql:5.5
        env:
          MYSQL_ROOT_PASSWORD: admin
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --name redis
    steps:
      - name: Verify MYSQL connection
        env:
          PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setting Up DB
        run: |
          mysql -h 127.0.0.1 -P 3306 --protocol=tcp -u root -padmin < .ci/tests.db.sql
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run tests
        run: go test -v -covermode=count ./...
  codecov:
    name: codecov
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15.x
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Generate coverage report
        run: |
          go test `go list ./... | grep -v examples` -coverprofile=coverage.txt -covermode=atomic

      - name: Upload coverage report
        uses: codecov/codecov-action@v1.0.2
        with:
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella